spring:
    application:
        name: order-service

#kafka configuration
    kafka:
      producer:
        bootstrap-servers: localhost:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer


#Data base configuration
    datasource:
      username: root
      password: b2bdb
      url: jdbc:mysql://localhost:4444/b2b_db

#JPA Configuration
    jpa:
     show_sql: true
     hibernate:
       ddl-auto: update
     properties:
       hibernate:
         format_sql: true

#Port and Context path configuration
server:
  port: 9002
  servlet:
    context-path: /api/v1

#Eureka configuration
eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:5678/eureka/}
    hostname: ${EUREKA_HOST:localhost}


resilience4j:
  retry:
    instances:
      productService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2.0
        enableRandomizedWait: true
        ignoreExceptions:
          - com.order.exception.ProductAlreadyExistInCart
  rateLimiter:
    instances:
      productRateLimiter:
        limitForPeriod: 2
        limitRefreshPeriod: 30s
        timeoutDuration: 1s